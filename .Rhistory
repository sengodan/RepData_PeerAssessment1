demo()
setwd("~/Coursera/Reproducible Research/Workspace/RepData_PeerAssessment1")
ls
setwd("~/Coursera/Reproducible Research/Workspace/RepData_PeerAssessment1")
activity <- read.csv("activity.csv")
head(activity)
as.date( date[2,2] , "YYYY-mm-dd" )
date.as( date[2,2] , "YYYY-mm-dd" )
as.Date( date[2,2] , "YYYY-mm-dd" )
as.Date( activity[2,2] , "YYYY-mm-dd" )
as.Date( activity[2,2] , "%Y%b%d" )
as.Date( activity[2,2] , "%Y%B%d" )
as.Date( activity[2,2] , "%Y-%B-%d" )
activity[2,2]
as.Date( activity[2,2] , "%Y%B%d" )
as.Date( activity[2,2]  )
activity$date <- as.Date( activity$date )
head(activity)
class(activity)
class(activity$data)
class(activity$date)
names(activity)
complete.cases(activity)
subset(activity, !is.na())
subset(activity, !is.na(steps))
activity_valid -> subset(activity, !is.na(steps))
activity_valid <- subset(activity, !is.na(steps))
?read.csv
activity <- read.csv("activity.csv", skipNul = TRUE)
activity_group <- group_by(activity_valid, date)
library(dplyr)
activity_group <- group_by(activity_valid, date)
activity_daily <- summarize(activity_group, steps_daily = sum(steps) )
mean(activity_daily$steps_daily)
median(activity_daily$steps_daily)
summary(activity_daily)
hist(activity_daily$steps_daily)
?hist
hist(activity_daily$steps_daily, main = "Total number of steps taken per day")
hist(activity_daily$steps_daily, main = "Total number of steps taken per day", xlab="Daily Steps")
## What is the average daily activity pattern?
## What is mean total number of steps taken per day?
```{r simulation, echo = TRUE}
install.packages("knitr")
head(activity_daily)
head(activity_valid)
activity_group <- group_by(activity_valid, interval)
activity_interval <- summarize(activity_group, steps_interval = mean(steps) )
head(activity_interval)
plot(activity_interval, x=activity_interval$interval, y= )
activity_interval <- summarize(activity_group, steps_avg = mean(steps) )
plot(activity_interval, x=activity_interval$interval, y=activity_interval$steps_avg )
plot(activity_interval, x=activity_interval$interval, y=activity_interval$steps_avg, type="1" )
plot(x=activity_interval$interval, y=activity_interval$steps_avg, type="1" )
plot(x=activity_interval$interval, y=activity_interval$steps_avg, type="i" )
plot(x=activity_interval$interval, y=activity_interval$steps_avg )
plot(x=activity_interval$interval, y=activity_interval$steps_avg, type="o" )
plot(x=activity_interval$interval, y=activity_interval$steps_avg, type="0" )
plot(x=activity_interval$interval, y=activity_interval$steps_avg, type="o" )
plot(x=activity_interval$interval, y=activity_interval$steps_avg, type="o", xlab="Interval", ylab="Number of steps", title="Average steps per interval" )
plot(x=activity_interval$interval, y=activity_interval$steps_avg, type="o", xlab="Interval", ylab="Number of steps", main="Average steps per interval" )
warnings()
?plot
plot(x=activity_interval$interval, y=activity_interval$steps_avg, type="o", xlab="Interval", ylab="Number of steps", main="Average steps per interval" )
plot(x=activity_interval$interval, y=activity_interval$steps_avg, type="1", xlab="Interval", ylab="Number of steps", main="Average steps per interval" )
plot(x=activity_interval$interval, y=activity_interval$steps_avg, type="l", xlab="Interval", ylab="Number of steps", main="Average steps per interval" )
plot(x=activity_interval$interval, y=activity_interval$steps_avg, type="l", xlab="Interval", ylab="Number of steps", main="Average steps per interval", color = "Blue" )
plot(x=activity_interval$interval, y=activity_interval$steps_avg, type="l", xlab="Interval", ylab="Number of steps", main="Average steps per interval", col = "Blue" )
activity_interval[max(activity_interval$steps_avg),1]
activity_interval[max(activity_interval$steps_avg),]
max(activity_interval$steps_avg)
activity_interval[activity_interval$steps_avg==max(activity_interval$steps_avg),]
activity_interval[activity_interval$steps_avg==max(activity_interval$steps_avg),1]
activity_valid[1,1]
activity_valid[2,1]
head(activity_valid)
activity_valid[2,2]
weekdays(activity_valid[2,2])
?weekdays
Sys.Date
Sys.Date()
Sys.Time()
weekdays(activity_valid[2,2], abbreviate = FALSE)
weekdays(activity_valid[2,2], abbreviate =TRUE)
weekdays(activity_valid[2,2])
library(lubridate)
wday(activity_valid[2,2])
wday(Sys.Date())
wday(Sys.Date()+1)
wday(Sys.Date()+2)
activity_valid$weekdays <- ifelse(wday(activity_valid$date) == 1 | wday(activity_valid$date) == 7, "Weekend", "Weekday"     )
head(activity_valid)
tail(activity_valid)
activity_valid
activity_group <- group_by(activity_valid, interval, weekdays)
activity_weekly <- summarize(activity_group, steps_avg = mean(steps) )
head( activity_weekly )
head( activity_weekly, 25 )
head( activity_weekly, 100:120 )
head( activity_weekly, 150 )
activity_weekly
activity_weekly[activity_weekly$interval > 1000,]
ggplot(activity_weekly, aes(interval, steps_avg)) + geom_line(aes(group=weekdays)) + aes(color=weekdays) +labs(title="Avg Steps")
library(ggplot2)
ggplot(activity_weekly, aes(interval, steps_avg)) + geom_line(aes(group=weekdays)) + aes(color=weekdays) +labs(title="Avg Steps")
qplot(interval, steps_avg, data=activity_weekly ,geom="line", binwidth =2 + facet_grid(weekdays ~ . )
)
qplot(interval, steps_avg, data=activity_weekly ,geom="line", binwidth =2) + facet_grid(weekdays ~ . )
qplot(interval, steps_avg, data=activity_weekly ,geom="line", binwidth =2) + facet_grid(weekdays ~ . ) +labs(x = "Number of steps")
qplot(interval, steps_avg, data=activity_weekly ,geom="line", binwidth =2) + facet_grid(weekdays ~ . ) +labs(y = "Number of steps")
